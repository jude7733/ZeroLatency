/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\public\models\VR.gltf 
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function VR(props) {
  const { nodes, materials } = useGLTF("./models/VR.gltf");
  return (
    <group {...props} dispose={null} scale={2.2} rotation={[0.5,-0.7,0]}>
      <directionalLight intensity={3} position={[-1, 2, 1]} />
      <group scale={0.01}>
        <mesh
          geometry={nodes.Oculus_Q2_Carcaza_0.geometry}
          material={materials.Carcaza}
          scale={0.304}
        />
        <mesh
          geometry={nodes.Oculus_Q2_Interior_Negro_0.geometry}
          material={materials.Negro}
          scale={0.299}
        />
        <mesh
          geometry={nodes.Power_Botton__0.geometry}
          material={materials.Power_Botton__0}
          position={[110.165, -25.668, 38.641]}
          rotation={[0, 0, -0.132]}
          scale={[0.059, 0.022, 0.016]}
        />
        <mesh
          geometry={nodes.Power_Botton001__0.geometry}
          material={materials.Power_Botton__0}
          position={[-111.514, -25.668, 38.641]}
          rotation={[Math.PI, 0, 3.009]}
          scale={[0.059, 0.022, 0.016]}
        />
        <mesh
          geometry={nodes["Soporte-Lente_Negro_0"].geometry}
          material={materials.Negro}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.27}
        />
        <mesh
          geometry={nodes["Volumen_+_-__0"].geometry}
          material={materials.Power_Botton__0}
          position={[-37.17, -77.002, 70.555]}
          rotation={[1.484, 1.544, 3.009]}
          scale={[0.053, 0.04, 0.046]}
        />
        <mesh
          geometry={nodes.Goma_Negro_0.geometry}
          material={materials.Negro}
          position={[0, 0, 2.792]}
          scale={0.286}
        />
        <mesh
          geometry={nodes.Sphere001__0.geometry}
          material={materials.Power_Botton__0}
          position={[0, -14.043, -94.677]}
          scale={1.348}
        />
        <mesh
          geometry={nodes["Sensor-Up-Izq_Negro_0"].geometry}
          material={materials.Negro}
          position={[85.078, 30.133, 85.928]}
          rotation={[-0.106, -0.593, 2.308]}
          scale={0.017}
        />
        <mesh
          geometry={nodes["Sensor-Up-drc_Negro_0"].geometry}
          material={materials.Negro}
          position={[-84.78, 30.873, 86.405]}
          rotation={[0.005, 0.766, -2.468]}
          scale={0.017}
        />
        <mesh
          geometry={nodes["Sensor-Bajo-Izq_Negro_0"].geometry}
          material={materials.Negro}
          position={[85.078, -62.069, 85.928]}
          rotation={[-0.325, 0.149, 0.437]}
          scale={0.017}
        />
        <mesh
          geometry={nodes["Sensor-Bajo-drc_Negro_0"].geometry}
          material={materials.Negro}
          position={[-86.255, -61.324, 86.042]}
          rotation={[0.043, 0.354, -0.843]}
          scale={0.017}
        />
        <mesh
          geometry={nodes["Agarre-Lateral-drc__0"].geometry}
          material={materials.Power_Botton__0}
          position={[-117.038, 0, 0]}
          rotation={[0, 0, Math.PI]}
          scale={[0.05, 0.141, 0.465]}
        />
        <mesh
          geometry={nodes["Agarre-Lateral-izq__0"].geometry}
          material={materials.Power_Botton__0}
          position={[116.51, 0, 0]}
          scale={[0.05, 0.141, 0.465]}
        />
        <mesh
          geometry={nodes.Circle_OnOff_0.geometry}
          material={materials.OnOff}
          position={[-109.058, -25.721, 59.733]}
          rotation={[0, 0, -Math.PI / 2]}
          scale={0.009}
        />
        <mesh
          geometry={nodes.Lente_Lentes_0.geometry}
          material={materials.Lentes}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.27}
        />
        <mesh
          geometry={nodes.Cube__0.geometry}
          material={materials.Power_Botton__0}
          position={[38.842, 0, -218.216]}
          rotation={[0.102, -0.295, 0]}
          scale={[0.058, 0.163, 0.05]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("./models/VR.gltf");
